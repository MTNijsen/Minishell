
#define _XOPEN_SOURCE 700 to get rid of typedef error surrounding struct sigaction (it also removes other warnings for other incomplete structs)


$ after failed execution like invalid command is 127


flag tag is flawed as you need to check if its a valid flag for which you need to know the command before this, that seems out of scope for parser
how do we have env variables aka envp as a char *envp[] or as a linked list
make stringappend_line that appends frees first variable and adds newline for export and env
need to not be seperate programs as you only need to be able to fork into them not run them outside of the shell change to function names after testing

mnijsen@f1r1s7:~$ echo " '$PWD' " ' "$PWD" ' " " $PWD" " ' ' $PWD ' '
 '/home/mnijsen'   "$PWD"    /home/mnijsen    /home/mnijsen  

 order of expansion first env variables then quotes seen in $PA"TH"
 programs who were were writen inside brackets are still executed as in "./a.out"

mnijsen@f1r2s5:~/minishell_real$ export "PWD="=HELP
mnijsen@f1r2s5:=HELP$ env | grep PWD
PWD==HELP
OLDPWD=/home/mnijsen
mnijsen@f1r2s5:=HELP$ 

mnijsen@f1r6s8:~$ rm help.txt 
mnijsen@f1r6s8:~$ ls > help.txt | ls < help.txt
bash: help.txt: No such file or directory
mnijsen@f1r6s8:~$ ls > help.txt | ls < help.txt
cpp	   goinfre     minishell       Pictures  sgoinfre   test4
Desktop    hellothere  minishell_real  pipex	 Templates  test.txt
Documents  help.txt    MLX42	       Public	 test	    text.txt
Downloads  ls	       Music	       pwd	 test3	    Videos

rules for enviroment variables
    a-z, A-Z, _ and 0-9
    May NOT begin with a number


command arg arg arg < infile.txt | command "$env this is env" arg arg > outfile.txt
($env = hello)
broken into 

command - arg - arg - arg
< - infile.txt
|
command - hello this is env - arg - arg
> - outfile.txt


When Bash invokes an external command, the variable ‘$_’ is set to the full pathname of the command and passed to that command in its environment.

mnijsen@f0r1s15:~$ export Hello=
mnijsen@f0r1s15:~$ export | grep Hello
declare -x Hello=""
mnijsen@f0r1s15:~$ export Hello
mnijsen@f0r1s15:~$ export | grep Hello
declare -x Hello=""
mnijsen@f0r1s15:~$ export test
mnijsen@f0r1s15:~$ export | grep test
declare -x HELLO="test"
declare -x test
